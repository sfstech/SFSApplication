'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace TerraServiceWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="TerraServiceSoap", [Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class TerraService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ConvertLonLatPtToNearestPlaceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConvertLonLatPtToUtmPtOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConvertUtmPtToLonLatPtOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConvertPlaceToLonLatPtOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CountPlacesInRectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAreaFromPtOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAreaFromRectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAreaFromTileIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLatLonMetricsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPlaceFactsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPlaceListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPlaceListInRectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetThemeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTileMetaFromLonLatPtOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTileMetaFromTileIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://terraserver-usa.com/TerraService2.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ConvertLonLatPtToNearestPlaceCompleted As ConvertLonLatPtToNearestPlaceCompletedEventHandler
        
        '''<remarks/>
        Public Event ConvertLonLatPtToUtmPtCompleted As ConvertLonLatPtToUtmPtCompletedEventHandler
        
        '''<remarks/>
        Public Event ConvertUtmPtToLonLatPtCompleted As ConvertUtmPtToLonLatPtCompletedEventHandler
        
        '''<remarks/>
        Public Event ConvertPlaceToLonLatPtCompleted As ConvertPlaceToLonLatPtCompletedEventHandler
        
        '''<remarks/>
        Public Event CountPlacesInRectCompleted As CountPlacesInRectCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAreaFromPtCompleted As GetAreaFromPtCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAreaFromRectCompleted As GetAreaFromRectCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAreaFromTileIdCompleted As GetAreaFromTileIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLatLonMetricsCompleted As GetLatLonMetricsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPlaceFactsCompleted As GetPlaceFactsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPlaceListCompleted As GetPlaceListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPlaceListInRectCompleted As GetPlaceListInRectCompletedEventHandler
        
        '''<remarks/>
        Public Event GetThemeCompleted As GetThemeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTileMetaFromLonLatPtCompleted As GetTileMetaFromLonLatPtCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTileMetaFromTileIdCompleted As GetTileMetaFromTileIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTileCompleted As GetTileCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/ConvertLonLatPtToNearestPlace", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConvertLonLatPtToNearestPlace(ByVal point As LonLatPt) As String
            Dim results() As Object = Me.Invoke("ConvertLonLatPtToNearestPlace", New Object() {point})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConvertLonLatPtToNearestPlaceAsync(ByVal point As LonLatPt)
            Me.ConvertLonLatPtToNearestPlaceAsync(point, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConvertLonLatPtToNearestPlaceAsync(ByVal point As LonLatPt, ByVal userState As Object)
            If (Me.ConvertLonLatPtToNearestPlaceOperationCompleted Is Nothing) Then
                Me.ConvertLonLatPtToNearestPlaceOperationCompleted = AddressOf Me.OnConvertLonLatPtToNearestPlaceOperationCompleted
            End If
            Me.InvokeAsync("ConvertLonLatPtToNearestPlace", New Object() {point}, Me.ConvertLonLatPtToNearestPlaceOperationCompleted, userState)
        End Sub
        
        Private Sub OnConvertLonLatPtToNearestPlaceOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConvertLonLatPtToNearestPlaceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConvertLonLatPtToNearestPlaceCompleted(Me, New ConvertLonLatPtToNearestPlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/ConvertLonLatPtToUtmPt", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConvertLonLatPtToUtmPt(ByVal point As LonLatPt) As UtmPt
            Dim results() As Object = Me.Invoke("ConvertLonLatPtToUtmPt", New Object() {point})
            Return CType(results(0),UtmPt)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConvertLonLatPtToUtmPtAsync(ByVal point As LonLatPt)
            Me.ConvertLonLatPtToUtmPtAsync(point, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConvertLonLatPtToUtmPtAsync(ByVal point As LonLatPt, ByVal userState As Object)
            If (Me.ConvertLonLatPtToUtmPtOperationCompleted Is Nothing) Then
                Me.ConvertLonLatPtToUtmPtOperationCompleted = AddressOf Me.OnConvertLonLatPtToUtmPtOperationCompleted
            End If
            Me.InvokeAsync("ConvertLonLatPtToUtmPt", New Object() {point}, Me.ConvertLonLatPtToUtmPtOperationCompleted, userState)
        End Sub
        
        Private Sub OnConvertLonLatPtToUtmPtOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConvertLonLatPtToUtmPtCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConvertLonLatPtToUtmPtCompleted(Me, New ConvertLonLatPtToUtmPtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/ConvertUtmPtToLonLatPt", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConvertUtmPtToLonLatPt(ByVal utm As UtmPt) As LonLatPt
            Dim results() As Object = Me.Invoke("ConvertUtmPtToLonLatPt", New Object() {utm})
            Return CType(results(0),LonLatPt)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConvertUtmPtToLonLatPtAsync(ByVal utm As UtmPt)
            Me.ConvertUtmPtToLonLatPtAsync(utm, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConvertUtmPtToLonLatPtAsync(ByVal utm As UtmPt, ByVal userState As Object)
            If (Me.ConvertUtmPtToLonLatPtOperationCompleted Is Nothing) Then
                Me.ConvertUtmPtToLonLatPtOperationCompleted = AddressOf Me.OnConvertUtmPtToLonLatPtOperationCompleted
            End If
            Me.InvokeAsync("ConvertUtmPtToLonLatPt", New Object() {utm}, Me.ConvertUtmPtToLonLatPtOperationCompleted, userState)
        End Sub
        
        Private Sub OnConvertUtmPtToLonLatPtOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConvertUtmPtToLonLatPtCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConvertUtmPtToLonLatPtCompleted(Me, New ConvertUtmPtToLonLatPtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/ConvertPlaceToLonLatPt", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConvertPlaceToLonLatPt(ByVal place As Place) As LonLatPt
            Dim results() As Object = Me.Invoke("ConvertPlaceToLonLatPt", New Object() {place})
            Return CType(results(0),LonLatPt)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConvertPlaceToLonLatPtAsync(ByVal place As Place)
            Me.ConvertPlaceToLonLatPtAsync(place, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConvertPlaceToLonLatPtAsync(ByVal place As Place, ByVal userState As Object)
            If (Me.ConvertPlaceToLonLatPtOperationCompleted Is Nothing) Then
                Me.ConvertPlaceToLonLatPtOperationCompleted = AddressOf Me.OnConvertPlaceToLonLatPtOperationCompleted
            End If
            Me.InvokeAsync("ConvertPlaceToLonLatPt", New Object() {place}, Me.ConvertPlaceToLonLatPtOperationCompleted, userState)
        End Sub
        
        Private Sub OnConvertPlaceToLonLatPtOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConvertPlaceToLonLatPtCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConvertPlaceToLonLatPtCompleted(Me, New ConvertPlaceToLonLatPtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/CountPlacesInRect", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CountPlacesInRect(ByVal upperleft As LonLatPt, ByVal lowerright As LonLatPt, ByVal ptype As PlaceType) As Integer
            Dim results() As Object = Me.Invoke("CountPlacesInRect", New Object() {upperleft, lowerright, ptype})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CountPlacesInRectAsync(ByVal upperleft As LonLatPt, ByVal lowerright As LonLatPt, ByVal ptype As PlaceType)
            Me.CountPlacesInRectAsync(upperleft, lowerright, ptype, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CountPlacesInRectAsync(ByVal upperleft As LonLatPt, ByVal lowerright As LonLatPt, ByVal ptype As PlaceType, ByVal userState As Object)
            If (Me.CountPlacesInRectOperationCompleted Is Nothing) Then
                Me.CountPlacesInRectOperationCompleted = AddressOf Me.OnCountPlacesInRectOperationCompleted
            End If
            Me.InvokeAsync("CountPlacesInRect", New Object() {upperleft, lowerright, ptype}, Me.CountPlacesInRectOperationCompleted, userState)
        End Sub
        
        Private Sub OnCountPlacesInRectOperationCompleted(ByVal arg As Object)
            If (Not (Me.CountPlacesInRectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CountPlacesInRectCompleted(Me, New CountPlacesInRectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/GetAreaFromPt", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAreaFromPt(ByVal center As LonLatPt, ByVal theme As Integer, ByVal scale As Scale, ByVal displayPixWidth As Integer, ByVal displayPixHeight As Integer) As AreaBoundingBox
            Dim results() As Object = Me.Invoke("GetAreaFromPt", New Object() {center, theme, scale, displayPixWidth, displayPixHeight})
            Return CType(results(0),AreaBoundingBox)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAreaFromPtAsync(ByVal center As LonLatPt, ByVal theme As Integer, ByVal scale As Scale, ByVal displayPixWidth As Integer, ByVal displayPixHeight As Integer)
            Me.GetAreaFromPtAsync(center, theme, scale, displayPixWidth, displayPixHeight, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAreaFromPtAsync(ByVal center As LonLatPt, ByVal theme As Integer, ByVal scale As Scale, ByVal displayPixWidth As Integer, ByVal displayPixHeight As Integer, ByVal userState As Object)
            If (Me.GetAreaFromPtOperationCompleted Is Nothing) Then
                Me.GetAreaFromPtOperationCompleted = AddressOf Me.OnGetAreaFromPtOperationCompleted
            End If
            Me.InvokeAsync("GetAreaFromPt", New Object() {center, theme, scale, displayPixWidth, displayPixHeight}, Me.GetAreaFromPtOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAreaFromPtOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAreaFromPtCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAreaFromPtCompleted(Me, New GetAreaFromPtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/GetAreaFromRect", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAreaFromRect(ByVal upperLeft As LonLatPt, ByVal lowerRight As LonLatPt, ByVal theme As Integer, ByVal scale As Scale) As AreaBoundingBox
            Dim results() As Object = Me.Invoke("GetAreaFromRect", New Object() {upperLeft, lowerRight, theme, scale})
            Return CType(results(0),AreaBoundingBox)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAreaFromRectAsync(ByVal upperLeft As LonLatPt, ByVal lowerRight As LonLatPt, ByVal theme As Integer, ByVal scale As Scale)
            Me.GetAreaFromRectAsync(upperLeft, lowerRight, theme, scale, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAreaFromRectAsync(ByVal upperLeft As LonLatPt, ByVal lowerRight As LonLatPt, ByVal theme As Integer, ByVal scale As Scale, ByVal userState As Object)
            If (Me.GetAreaFromRectOperationCompleted Is Nothing) Then
                Me.GetAreaFromRectOperationCompleted = AddressOf Me.OnGetAreaFromRectOperationCompleted
            End If
            Me.InvokeAsync("GetAreaFromRect", New Object() {upperLeft, lowerRight, theme, scale}, Me.GetAreaFromRectOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAreaFromRectOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAreaFromRectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAreaFromRectCompleted(Me, New GetAreaFromRectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/GetAreaFromTileId", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAreaFromTileId(ByVal id As TileId, ByVal displayPixWidth As Integer, ByVal displayPixHeight As Integer) As AreaBoundingBox
            Dim results() As Object = Me.Invoke("GetAreaFromTileId", New Object() {id, displayPixWidth, displayPixHeight})
            Return CType(results(0),AreaBoundingBox)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAreaFromTileIdAsync(ByVal id As TileId, ByVal displayPixWidth As Integer, ByVal displayPixHeight As Integer)
            Me.GetAreaFromTileIdAsync(id, displayPixWidth, displayPixHeight, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAreaFromTileIdAsync(ByVal id As TileId, ByVal displayPixWidth As Integer, ByVal displayPixHeight As Integer, ByVal userState As Object)
            If (Me.GetAreaFromTileIdOperationCompleted Is Nothing) Then
                Me.GetAreaFromTileIdOperationCompleted = AddressOf Me.OnGetAreaFromTileIdOperationCompleted
            End If
            Me.InvokeAsync("GetAreaFromTileId", New Object() {id, displayPixWidth, displayPixHeight}, Me.GetAreaFromTileIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAreaFromTileIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAreaFromTileIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAreaFromTileIdCompleted(Me, New GetAreaFromTileIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/GetLatLonMetrics", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLatLonMetrics(ByVal point As LonLatPt) As <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> ThemeBoundingBox()
            Dim results() As Object = Me.Invoke("GetLatLonMetrics", New Object() {point})
            Return CType(results(0),ThemeBoundingBox())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLatLonMetricsAsync(ByVal point As LonLatPt)
            Me.GetLatLonMetricsAsync(point, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLatLonMetricsAsync(ByVal point As LonLatPt, ByVal userState As Object)
            If (Me.GetLatLonMetricsOperationCompleted Is Nothing) Then
                Me.GetLatLonMetricsOperationCompleted = AddressOf Me.OnGetLatLonMetricsOperationCompleted
            End If
            Me.InvokeAsync("GetLatLonMetrics", New Object() {point}, Me.GetLatLonMetricsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLatLonMetricsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLatLonMetricsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLatLonMetricsCompleted(Me, New GetLatLonMetricsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/GetPlaceFacts", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPlaceFacts(ByVal place As Place) As PlaceFacts
            Dim results() As Object = Me.Invoke("GetPlaceFacts", New Object() {place})
            Return CType(results(0),PlaceFacts)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPlaceFactsAsync(ByVal place As Place)
            Me.GetPlaceFactsAsync(place, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPlaceFactsAsync(ByVal place As Place, ByVal userState As Object)
            If (Me.GetPlaceFactsOperationCompleted Is Nothing) Then
                Me.GetPlaceFactsOperationCompleted = AddressOf Me.OnGetPlaceFactsOperationCompleted
            End If
            Me.InvokeAsync("GetPlaceFacts", New Object() {place}, Me.GetPlaceFactsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPlaceFactsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPlaceFactsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPlaceFactsCompleted(Me, New GetPlaceFactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/GetPlaceList", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPlaceList(ByVal placeName As String, ByVal MaxItems As Integer, ByVal imagePresence As Boolean) As <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> PlaceFacts()
            Dim results() As Object = Me.Invoke("GetPlaceList", New Object() {placeName, MaxItems, imagePresence})
            Return CType(results(0),PlaceFacts())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPlaceListAsync(ByVal placeName As String, ByVal MaxItems As Integer, ByVal imagePresence As Boolean)
            Me.GetPlaceListAsync(placeName, MaxItems, imagePresence, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPlaceListAsync(ByVal placeName As String, ByVal MaxItems As Integer, ByVal imagePresence As Boolean, ByVal userState As Object)
            If (Me.GetPlaceListOperationCompleted Is Nothing) Then
                Me.GetPlaceListOperationCompleted = AddressOf Me.OnGetPlaceListOperationCompleted
            End If
            Me.InvokeAsync("GetPlaceList", New Object() {placeName, MaxItems, imagePresence}, Me.GetPlaceListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPlaceListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPlaceListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPlaceListCompleted(Me, New GetPlaceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/GetPlaceListInRect", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPlaceListInRect(ByVal upperleft As LonLatPt, ByVal lowerright As LonLatPt, ByVal ptype As PlaceType, ByVal MaxItems As Integer) As <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> PlaceFacts()
            Dim results() As Object = Me.Invoke("GetPlaceListInRect", New Object() {upperleft, lowerright, ptype, MaxItems})
            Return CType(results(0),PlaceFacts())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPlaceListInRectAsync(ByVal upperleft As LonLatPt, ByVal lowerright As LonLatPt, ByVal ptype As PlaceType, ByVal MaxItems As Integer)
            Me.GetPlaceListInRectAsync(upperleft, lowerright, ptype, MaxItems, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPlaceListInRectAsync(ByVal upperleft As LonLatPt, ByVal lowerright As LonLatPt, ByVal ptype As PlaceType, ByVal MaxItems As Integer, ByVal userState As Object)
            If (Me.GetPlaceListInRectOperationCompleted Is Nothing) Then
                Me.GetPlaceListInRectOperationCompleted = AddressOf Me.OnGetPlaceListInRectOperationCompleted
            End If
            Me.InvokeAsync("GetPlaceListInRect", New Object() {upperleft, lowerright, ptype, MaxItems}, Me.GetPlaceListInRectOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPlaceListInRectOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPlaceListInRectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPlaceListInRectCompleted(Me, New GetPlaceListInRectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/GetTheme", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTheme(ByVal theme As Integer) As ThemeInfo
            Dim results() As Object = Me.Invoke("GetTheme", New Object() {theme})
            Return CType(results(0),ThemeInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetThemeAsync(ByVal theme As Integer)
            Me.GetThemeAsync(theme, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetThemeAsync(ByVal theme As Integer, ByVal userState As Object)
            If (Me.GetThemeOperationCompleted Is Nothing) Then
                Me.GetThemeOperationCompleted = AddressOf Me.OnGetThemeOperationCompleted
            End If
            Me.InvokeAsync("GetTheme", New Object() {theme}, Me.GetThemeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetThemeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetThemeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetThemeCompleted(Me, New GetThemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/GetTileMetaFromLonLatPt", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTileMetaFromLonLatPt(ByVal point As LonLatPt, ByVal theme As Integer, ByVal scale As Scale) As TileMeta
            Dim results() As Object = Me.Invoke("GetTileMetaFromLonLatPt", New Object() {point, theme, scale})
            Return CType(results(0),TileMeta)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTileMetaFromLonLatPtAsync(ByVal point As LonLatPt, ByVal theme As Integer, ByVal scale As Scale)
            Me.GetTileMetaFromLonLatPtAsync(point, theme, scale, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTileMetaFromLonLatPtAsync(ByVal point As LonLatPt, ByVal theme As Integer, ByVal scale As Scale, ByVal userState As Object)
            If (Me.GetTileMetaFromLonLatPtOperationCompleted Is Nothing) Then
                Me.GetTileMetaFromLonLatPtOperationCompleted = AddressOf Me.OnGetTileMetaFromLonLatPtOperationCompleted
            End If
            Me.InvokeAsync("GetTileMetaFromLonLatPt", New Object() {point, theme, scale}, Me.GetTileMetaFromLonLatPtOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTileMetaFromLonLatPtOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTileMetaFromLonLatPtCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTileMetaFromLonLatPtCompleted(Me, New GetTileMetaFromLonLatPtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/GetTileMetaFromTileId", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTileMetaFromTileId(ByVal id As TileId) As TileMeta
            Dim results() As Object = Me.Invoke("GetTileMetaFromTileId", New Object() {id})
            Return CType(results(0),TileMeta)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTileMetaFromTileIdAsync(ByVal id As TileId)
            Me.GetTileMetaFromTileIdAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTileMetaFromTileIdAsync(ByVal id As TileId, ByVal userState As Object)
            If (Me.GetTileMetaFromTileIdOperationCompleted Is Nothing) Then
                Me.GetTileMetaFromTileIdOperationCompleted = AddressOf Me.OnGetTileMetaFromTileIdOperationCompleted
            End If
            Me.InvokeAsync("GetTileMetaFromTileId", New Object() {id}, Me.GetTileMetaFromTileIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTileMetaFromTileIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTileMetaFromTileIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTileMetaFromTileIdCompleted(Me, New GetTileMetaFromTileIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://terraservice-usa.com/GetTile", RequestNamespace:="http://terraservice-usa.com/", ResponseNamespace:="http://terraservice-usa.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTile(ByVal id As TileId) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetTile", New Object() {id})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTileAsync(ByVal id As TileId)
            Me.GetTileAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTileAsync(ByVal id As TileId, ByVal userState As Object)
            If (Me.GetTileOperationCompleted Is Nothing) Then
                Me.GetTileOperationCompleted = AddressOf Me.OnGetTileOperationCompleted
            End If
            Me.InvokeAsync("GetTile", New Object() {id}, Me.GetTileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTileCompleted(Me, New GetTileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class LonLatPt
        
        Private lonField As Double
        
        Private latField As Double
        
        '''<remarks/>
        Public Property Lon() As Double
            Get
                Return Me.lonField
            End Get
            Set
                Me.lonField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Lat() As Double
            Get
                Return Me.latField
            End Get
            Set
                Me.latField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class ThemeInfo
        
        Private themeField As Integer
        
        Private nameField As String
        
        Private descriptionField As String
        
        Private supplierField As String
        
        Private loScaleField As Scale
        
        Private hiScaleField As Scale
        
        Private projectionIdField As ProjectionType
        
        Private projectionNameField As String
        
        Private copyrightNoticeField As String
        
        '''<remarks/>
        Public Property Theme() As Integer
            Get
                Return Me.themeField
            End Get
            Set
                Me.themeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Supplier() As String
            Get
                Return Me.supplierField
            End Get
            Set
                Me.supplierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoScale() As Scale
            Get
                Return Me.loScaleField
            End Get
            Set
                Me.loScaleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HiScale() As Scale
            Get
                Return Me.hiScaleField
            End Get
            Set
                Me.hiScaleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectionId() As ProjectionType
            Get
                Return Me.projectionIdField
            End Get
            Set
                Me.projectionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectionName() As String
            Get
                Return Me.projectionNameField
            End Get
            Set
                Me.projectionNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CopyrightNotice() As String
            Get
                Return Me.copyrightNoticeField
            End Get
            Set
                Me.copyrightNoticeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Public Enum Scale
        
        '''<remarks/>
        Scale1mm
        
        '''<remarks/>
        Scale2mm
        
        '''<remarks/>
        Scale4mm
        
        '''<remarks/>
        Scale8mm
        
        '''<remarks/>
        Scale16mm
        
        '''<remarks/>
        Scale32mm
        
        '''<remarks/>
        Scale63mm
        
        '''<remarks/>
        Scale125mm
        
        '''<remarks/>
        Scale250mm
        
        '''<remarks/>
        Scale500mm
        
        '''<remarks/>
        Scale1m
        
        '''<remarks/>
        Scale2m
        
        '''<remarks/>
        Scale4m
        
        '''<remarks/>
        Scale8m
        
        '''<remarks/>
        Scale16m
        
        '''<remarks/>
        Scale32m
        
        '''<remarks/>
        Scale64m
        
        '''<remarks/>
        Scale128m
        
        '''<remarks/>
        Scale256m
        
        '''<remarks/>
        Scale512m
        
        '''<remarks/>
        Scale1km
        
        '''<remarks/>
        Scale2km
        
        '''<remarks/>
        Scale4km
        
        '''<remarks/>
        Scale8km
        
        '''<remarks/>
        Scale16km
        
        '''<remarks/>
        Scale32km
        
        '''<remarks/>
        Scale64km
        
        '''<remarks/>
        Scale128km
        
        '''<remarks/>
        Scale256km
        
        '''<remarks/>
        Scale512km
        
        '''<remarks/>
        Scale1024km
        
        '''<remarks/>
        Scale2048km
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Public Enum ProjectionType
        
        '''<remarks/>
        Geographic
        
        '''<remarks/>
        UtmNad27
        
        '''<remarks/>
        UtmNad83
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class PlaceFacts
        
        Private placeField As Place
        
        Private centerField As LonLatPt
        
        Private availableThemeMaskField As Integer
        
        Private placeTypeIdField As PlaceType
        
        Private populationField As Integer
        
        '''<remarks/>
        Public Property Place() As Place
            Get
                Return Me.placeField
            End Get
            Set
                Me.placeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Center() As LonLatPt
            Get
                Return Me.centerField
            End Get
            Set
                Me.centerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AvailableThemeMask() As Integer
            Get
                Return Me.availableThemeMaskField
            End Get
            Set
                Me.availableThemeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PlaceTypeId() As PlaceType
            Get
                Return Me.placeTypeIdField
            End Get
            Set
                Me.placeTypeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Population() As Integer
            Get
                Return Me.populationField
            End Get
            Set
                Me.populationField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class Place
        
        Private cityField As String
        
        Private stateField As String
        
        Private countryField As String
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Public Enum PlaceType
        
        '''<remarks/>
        UnknownPlaceType
        
        '''<remarks/>
        AirRailStation
        
        '''<remarks/>
        BayGulf
        
        '''<remarks/>
        CapePeninsula
        
        '''<remarks/>
        CityTown
        
        '''<remarks/>
        HillMountain
        
        '''<remarks/>
        Island
        
        '''<remarks/>
        Lake
        
        '''<remarks/>
        OtherLandFeature
        
        '''<remarks/>
        OtherWaterFeature
        
        '''<remarks/>
        ParkBeach
        
        '''<remarks/>
        PointOfInterest
        
        '''<remarks/>
        River
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class ThemeBoundingBox
        
        Private themeField As Integer
        
        Private themeNameField As String
        
        Private sparsenessField As Integer
        
        Private loScaleField As Scale
        
        Private hiScaleField As Scale
        
        Private projectionIdField As ProjectionType
        
        Private projectionNameField As String
        
        Private westLongitudeField As Double
        
        Private northLatitudeField As Double
        
        Private eastLongitudeField As Double
        
        Private southLatitudeField As Double
        
        '''<remarks/>
        Public Property Theme() As Integer
            Get
                Return Me.themeField
            End Get
            Set
                Me.themeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ThemeName() As String
            Get
                Return Me.themeNameField
            End Get
            Set
                Me.themeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Sparseness() As Integer
            Get
                Return Me.sparsenessField
            End Get
            Set
                Me.sparsenessField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoScale() As Scale
            Get
                Return Me.loScaleField
            End Get
            Set
                Me.loScaleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HiScale() As Scale
            Get
                Return Me.hiScaleField
            End Get
            Set
                Me.hiScaleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectionId() As ProjectionType
            Get
                Return Me.projectionIdField
            End Get
            Set
                Me.projectionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectionName() As String
            Get
                Return Me.projectionNameField
            End Get
            Set
                Me.projectionNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WestLongitude() As Double
            Get
                Return Me.westLongitudeField
            End Get
            Set
                Me.westLongitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NorthLatitude() As Double
            Get
                Return Me.northLatitudeField
            End Get
            Set
                Me.northLatitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EastLongitude() As Double
            Get
                Return Me.eastLongitudeField
            End Get
            Set
                Me.eastLongitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SouthLatitude() As Double
            Get
                Return Me.southLatitudeField
            End Get
            Set
                Me.southLatitudeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class OverlappingThemeInfo
        
        Private localThemeField As Boolean
        
        Private themeField As Integer
        
        Private pointField As LonLatPt
        
        Private themeNameField As String
        
        Private captureField As Date
        
        Private projectionIdField As ProjectionType
        
        Private loScaleField As Scale
        
        Private hiScaleField As Scale
        
        Private urlField As String
        
        '''<remarks/>
        Public Property LocalTheme() As Boolean
            Get
                Return Me.localThemeField
            End Get
            Set
                Me.localThemeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Theme() As Integer
            Get
                Return Me.themeField
            End Get
            Set
                Me.themeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Point() As LonLatPt
            Get
                Return Me.pointField
            End Get
            Set
                Me.pointField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ThemeName() As String
            Get
                Return Me.themeNameField
            End Get
            Set
                Me.themeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Capture() As Date
            Get
                Return Me.captureField
            End Get
            Set
                Me.captureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectionId() As ProjectionType
            Get
                Return Me.projectionIdField
            End Get
            Set
                Me.projectionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoScale() As Scale
            Get
                Return Me.loScaleField
            End Get
            Set
                Me.loScaleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HiScale() As Scale
            Get
                Return Me.hiScaleField
            End Get
            Set
                Me.hiScaleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Url() As String
            Get
                Return Me.urlField
            End Get
            Set
                Me.urlField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class LonLatPtOffset
        
        Private pointField As LonLatPt
        
        Private xOffsetField As Integer
        
        Private yOffsetField As Integer
        
        '''<remarks/>
        Public Property Point() As LonLatPt
            Get
                Return Me.pointField
            End Get
            Set
                Me.pointField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property XOffset() As Integer
            Get
                Return Me.xOffsetField
            End Get
            Set
                Me.xOffsetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property YOffset() As Integer
            Get
                Return Me.yOffsetField
            End Get
            Set
                Me.yOffsetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class TileId
        
        Private themeField As Integer
        
        Private scaleField As Scale
        
        Private sceneField As Integer
        
        Private xField As Integer
        
        Private yField As Integer
        
        '''<remarks/>
        Public Property Theme() As Integer
            Get
                Return Me.themeField
            End Get
            Set
                Me.themeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Scale() As Scale
            Get
                Return Me.scaleField
            End Get
            Set
                Me.scaleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Scene() As Integer
            Get
                Return Me.sceneField
            End Get
            Set
                Me.sceneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property X() As Integer
            Get
                Return Me.xField
            End Get
            Set
                Me.xField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Y() As Integer
            Get
                Return Me.yField
            End Get
            Set
                Me.yField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class TileMeta
        
        Private idField As TileId
        
        Private tileExistsField As Boolean
        
        Private northWestField As LonLatPt
        
        Private northEastField As LonLatPt
        
        Private southWestField As LonLatPt
        
        Private southEastField As LonLatPt
        
        Private centerField As LonLatPt
        
        Private captureField As Date
        
        '''<remarks/>
        Public Property Id() As TileId
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TileExists() As Boolean
            Get
                Return Me.tileExistsField
            End Get
            Set
                Me.tileExistsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NorthWest() As LonLatPt
            Get
                Return Me.northWestField
            End Get
            Set
                Me.northWestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NorthEast() As LonLatPt
            Get
                Return Me.northEastField
            End Get
            Set
                Me.northEastField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SouthWest() As LonLatPt
            Get
                Return Me.southWestField
            End Get
            Set
                Me.southWestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SouthEast() As LonLatPt
            Get
                Return Me.southEastField
            End Get
            Set
                Me.southEastField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Center() As LonLatPt
            Get
                Return Me.centerField
            End Get
            Set
                Me.centerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Capture() As Date
            Get
                Return Me.captureField
            End Get
            Set
                Me.captureField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class AreaCoordinate
        
        Private tileMetaField As TileMeta
        
        Private offsetField As LonLatPtOffset
        
        '''<remarks/>
        Public Property TileMeta() As TileMeta
            Get
                Return Me.tileMetaField
            End Get
            Set
                Me.tileMetaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Offset() As LonLatPtOffset
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class AreaBoundingBox
        
        Private northWestField As AreaCoordinate
        
        Private northEastField As AreaCoordinate
        
        Private southWestField As AreaCoordinate
        
        Private southEastField As AreaCoordinate
        
        Private centerField As AreaCoordinate
        
        Private nearestPlaceField As String
        
        Private overlappingThemeInfosField() As OverlappingThemeInfo
        
        '''<remarks/>
        Public Property NorthWest() As AreaCoordinate
            Get
                Return Me.northWestField
            End Get
            Set
                Me.northWestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NorthEast() As AreaCoordinate
            Get
                Return Me.northEastField
            End Get
            Set
                Me.northEastField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SouthWest() As AreaCoordinate
            Get
                Return Me.southWestField
            End Get
            Set
                Me.southWestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SouthEast() As AreaCoordinate
            Get
                Return Me.southEastField
            End Get
            Set
                Me.southEastField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Center() As AreaCoordinate
            Get
                Return Me.centerField
            End Get
            Set
                Me.centerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NearestPlace() As String
            Get
                Return Me.nearestPlaceField
            End Get
            Set
                Me.nearestPlaceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Property OverlappingThemeInfos() As OverlappingThemeInfo()
            Get
                Return Me.overlappingThemeInfosField
            End Get
            Set
                Me.overlappingThemeInfosField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://terraservice-usa.com/")>  _
    Partial Public Class UtmPt
        
        Private zoneField As Integer
        
        Private xField As Double
        
        Private yField As Double
        
        '''<remarks/>
        Public Property Zone() As Integer
            Get
                Return Me.zoneField
            End Get
            Set
                Me.zoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property X() As Double
            Get
                Return Me.xField
            End Get
            Set
                Me.xField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Y() As Double
            Get
                Return Me.yField
            End Get
            Set
                Me.yField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub ConvertLonLatPtToNearestPlaceCompletedEventHandler(ByVal sender As Object, ByVal e As ConvertLonLatPtToNearestPlaceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConvertLonLatPtToNearestPlaceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub ConvertLonLatPtToUtmPtCompletedEventHandler(ByVal sender As Object, ByVal e As ConvertLonLatPtToUtmPtCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConvertLonLatPtToUtmPtCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UtmPt
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UtmPt)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub ConvertUtmPtToLonLatPtCompletedEventHandler(ByVal sender As Object, ByVal e As ConvertUtmPtToLonLatPtCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConvertUtmPtToLonLatPtCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LonLatPt
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LonLatPt)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub ConvertPlaceToLonLatPtCompletedEventHandler(ByVal sender As Object, ByVal e As ConvertPlaceToLonLatPtCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConvertPlaceToLonLatPtCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LonLatPt
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LonLatPt)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub CountPlacesInRectCompletedEventHandler(ByVal sender As Object, ByVal e As CountPlacesInRectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CountPlacesInRectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetAreaFromPtCompletedEventHandler(ByVal sender As Object, ByVal e As GetAreaFromPtCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAreaFromPtCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AreaBoundingBox
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AreaBoundingBox)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetAreaFromRectCompletedEventHandler(ByVal sender As Object, ByVal e As GetAreaFromRectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAreaFromRectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AreaBoundingBox
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AreaBoundingBox)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetAreaFromTileIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetAreaFromTileIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAreaFromTileIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AreaBoundingBox
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AreaBoundingBox)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetLatLonMetricsCompletedEventHandler(ByVal sender As Object, ByVal e As GetLatLonMetricsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLatLonMetricsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ThemeBoundingBox()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ThemeBoundingBox())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetPlaceFactsCompletedEventHandler(ByVal sender As Object, ByVal e As GetPlaceFactsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPlaceFactsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PlaceFacts
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PlaceFacts)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetPlaceListCompletedEventHandler(ByVal sender As Object, ByVal e As GetPlaceListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPlaceListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PlaceFacts()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PlaceFacts())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetPlaceListInRectCompletedEventHandler(ByVal sender As Object, ByVal e As GetPlaceListInRectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPlaceListInRectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PlaceFacts()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PlaceFacts())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetThemeCompletedEventHandler(ByVal sender As Object, ByVal e As GetThemeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetThemeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ThemeInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ThemeInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetTileMetaFromLonLatPtCompletedEventHandler(ByVal sender As Object, ByVal e As GetTileMetaFromLonLatPtCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTileMetaFromLonLatPtCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TileMeta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TileMeta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetTileMetaFromTileIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetTileMetaFromTileIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTileMetaFromTileIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TileMeta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TileMeta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetTileCompletedEventHandler(ByVal sender As Object, ByVal e As GetTileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
End Namespace
